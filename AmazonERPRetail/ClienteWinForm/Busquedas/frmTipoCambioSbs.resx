<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATsAAABYCAYAAACKy1CHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADXGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0MzQyLCAyMDEwLzAxLzEwLTE4OjA2OjQzICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjg1QkU4NDBENzI5NEUxMTE5NkFDQTIyRjM1MzU0
        NDdDIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkRFNkRBNUM5QjY0QjExRTFCOEE2RDNCMEUzNEM1
        RjU2IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkRFNkRBNUM4QjY0QjExRTFCOEE2RDNCMEUzNEM1
        RjU2IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUiPiA8eG1wTU06RGVyaXZlZEZy
        b20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0RTU5QjFDNDNCQUJFMTExOEUyMkNCNjBBODA2MkNB
        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
</value>
  </data>
</root>